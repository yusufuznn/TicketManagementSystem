services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ticket-system-db
    environment:
      POSTGRES_DB: ticketdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ticket-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (.NET)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ticket-system-api
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=ticketdb;Username=postgres;Password=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ticket-network
    volumes:
      - ./backend/Uploads:/app/Uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ticket-system-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - ticket-network
    environment:
      - REACT_APP_API_URL=http://localhost:3000

volumes:
  postgres_data:

networks:
  ticket-network:
    driver: bridge 